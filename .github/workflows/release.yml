name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: changesets-to-parquet
            asset_name: changesets-to-parquet-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: changesets-to-parquet
            asset_name: changesets-to-parquet-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: changesets-to-parquet
            asset_name: changesets-to-parquet-macos-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: changesets-to-parquet.exe
            asset_name: changesets-to-parquet-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Linux and macOS)
        if: matrix.os != 'windows-latest'
        run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
